diff --git a/Makefile b/Makefile
index 4082546..020bb31 100644
--- a/Makefile
+++ b/Makefile
@@ -1,13 +1,29 @@
-CFLAGS += -fpic -shared -std=c11 -Wall -Wextra -Wl,--version-script=exports.txt
+CC = gcc
+STRIP = strip
 
-libandroid-shmem.so: shmem.c shm.h
-	$(CC) $(CFLAGS) $(LDFLAGS) shmem.c -llog -o $@
+LIBANDROID_SHMEM_SO = libandroid-shmem.so
+TYPE = debian-noroot
 
-install: libandroid-shmem.so shm.h
-	install -D libandroid-shmem.so $(PREFIX)/lib/libandroid-shmem.so
+CFLAGS += -fPIC -shared -std=c11 -Wall -Wextra -Wl,--version-script=exports.txt
+LDFLAGS +=
+
+ifeq ($(TYPE), debian-noroot)
+LIBANDROID_SHMEM_SO = libandroid-shmem-termux.so
+CFLAGS += -DDEBIAN_NOROOT
+else
+LIBANDROID_SHMEM_SO = libandroid-shmem.so
+LDFLAGS += -llog
+endif
+
+$(LIBANDROID_SHMEM_SO): shmem.c shm.h
+	$(CC) $(CFLAGS) $(LDFLAGS) shmem.c -o $@
+	$(STRIP) $@
+
+install: $(LIBANDROID_SHMEM_SO) shm.h
+	install -D $(LIBANDROID_SHMEM_SO) $(PREFIX)/lib/$(LIBANDROID_SHMEM_SO)
 	install -D shm.h $(PREFIX)/include/sys/shm.h
 
 clean:
-	rm -f libandroid-shmem.so
+	rm -f libandroid-shmem.so libandroid-shmem-termux.so
 
 .PHONY: install
diff --git a/linux/ashmem.h b/linux/ashmem.h
new file mode 100644
index 0000000..9f537ac
--- /dev/null
+++ b/linux/ashmem.h
@@ -0,0 +1,50 @@
+/****************************************************************************
+ ****************************************************************************
+ ***
+ ***   This header was automatically generated from a Linux kernel header
+ ***   of the same name, to make information necessary for userspace to
+ ***   call into the kernel available to libc.  It contains only constants,
+ ***   structures, and macros generated from the original header, and thus,
+ ***   contains no copyrightable information.
+ ***
+ ****************************************************************************
+ ****************************************************************************/
+
+#ifdef DEBIAN_NOROOT
+#ifndef _LINUX_ASHMEM_H
+#define _LINUX_ASHMEM_H
+
+#include <linux/limits.h>
+#include <linux/ioctl.h>
+#include <stdint.h>
+
+#define ASHMEM_NAME_LEN 256
+
+#define ASHMEM_NAME_DEF "dev/ashmem"
+
+#define ASHMEM_NOT_PURGED 0
+#define ASHMEM_WAS_PURGED 1
+
+#define ASHMEM_IS_UNPINNED 0
+#define ASHMEM_IS_PINNED 1
+
+struct ashmem_pin {
+ uint32_t offset;
+ uint32_t len;
+};
+
+#define __ASHMEMIOC 0x77
+
+#define ASHMEM_SET_NAME _IOW(__ASHMEMIOC, 1, char[ASHMEM_NAME_LEN])
+#define ASHMEM_GET_NAME _IOR(__ASHMEMIOC, 2, char[ASHMEM_NAME_LEN])
+#define ASHMEM_SET_SIZE _IOW(__ASHMEMIOC, 3, size_t)
+#define ASHMEM_GET_SIZE _IO(__ASHMEMIOC, 4)
+#define ASHMEM_SET_PROT_MASK _IOW(__ASHMEMIOC, 5, unsigned long)
+#define ASHMEM_GET_PROT_MASK _IO(__ASHMEMIOC, 6)
+#define ASHMEM_PIN _IOW(__ASHMEMIOC, 7, struct ashmem_pin)
+#define ASHMEM_UNPIN _IOW(__ASHMEMIOC, 8, struct ashmem_pin)
+#define ASHMEM_GET_PIN_STATUS _IO(__ASHMEMIOC, 9)
+#define ASHMEM_PURGE_ALL_CACHES _IO(__ASHMEMIOC, 10)
+
+#endif
+#endif /* DEBIAN_NOROOT */
diff --git a/shm.h b/shm.h
index f780a28..8cfc8f6 100644
--- a/shm.h
+++ b/shm.h
@@ -11,6 +11,10 @@ __BEGIN_DECLS
 # define shmid_ds shmid64_ds
 #endif
 
+#ifdef DEBIAN_NOROOT
+typedef __key_t key_t;
+#endif
+
 /* Shared memory control operations. */
 extern int shmctl(int shmid, int cmd, struct shmid_ds* buf);
 
diff --git a/shmem.c b/shmem.c
index d474535..0672b17 100644
--- a/shmem.c
+++ b/shmem.c
@@ -1,4 +1,10 @@
+#ifdef DEBIAN_NOROOT
+#define _BSD_SOURCE
+#define _GNU_SOURCE
+#define _XOPEN_SOURCE 500
+#else
 #include <android/log.h>
+#endif
 #include <errno.h>
 #include <pthread.h>
 #include <stdbool.h>
@@ -10,13 +16,25 @@
 #include <sys/un.h>
 #include <unistd.h>
 #include <paths.h>
+#include <sys/stat.h>
+#include <sys/ioctl.h>
+#include <fcntl.h>
+#include <string.h>
 
 #define __u32 uint32_t
+#ifdef DEBIAN_NOROOT
+#include "linux/ashmem.h"
+#else
 #include <linux/ashmem.h>
+#endif
 
 #include "shm.h"
 
+#ifdef DEBIAN_NOROOT
+#define DBG(fmt, ...) fprintf(stderr, "[shmem] " fmt "\n", __VA_ARGS__)
+#else
 #define DBG(...) __android_log_print(ANDROID_LOG_INFO, "shmem", __VA_ARGS__)
+#endif
 #define ASHV_KEY_SYMLINK_PATH _PATH_TMP "ashv_key_%d"
 #define ANDROID_SHMEM_SOCKNAME "/dev/shm/%08x"
 #define ROUND_UP(N, S) ((((N) + (S) - 1) / (S)) * (S))
@@ -189,7 +207,7 @@ static void* ashv_thread_function(void* arg)
 	struct sockaddr_un addr;
 	socklen_t len = sizeof(addr);
 	int sendsock;
-	//DBG("%s: thread started", __PRETTY_FUNCTION__);
+	DBG("%s: thread started", __PRETTY_FUNCTION__);
 	while ((sendsock = accept(sock, (struct sockaddr *)&addr, &len)) != -1) {
 		int shmid;
 		if (recv(sendsock, &shmid, sizeof(shmid), 0) != sizeof(shmid)) {
@@ -333,6 +351,7 @@ int shmget(key_t key, size_t size, int flags)
 	pthread_mutex_lock(&mutex);
 	char symlink_path[256];
 	if (key != IPC_PRIVATE) {
+		DBG ("shmget: key = %08x (is not IPC_PRIVATE)", key);
 		// (1) Check if symlink exists telling us where to connect.
 		// (2) If so, try to connect and open.
 		// (3) If connected and opened, done. If connection refused
@@ -367,9 +386,10 @@ int shmget(key_t key, size_t size, int flags)
 			}
 			if (symlink(num_buffer, symlink_path) == 0) break;
 		}
+	} else {
+		DBG ("shmget: key = %08x (is IPC_PRIVATE)", key);
 	}
 
-
 	int idx = shmem_amount;
 	char buf[256];
 	sprintf(buf, ANDROID_SHMEM_SOCKNAME "-%d", ashv_local_socket_id, idx);
